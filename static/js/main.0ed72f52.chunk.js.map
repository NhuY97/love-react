{"version":3,"sources":["routes/CONSTANTS.js","components/game/Number.js","recoil/atoms/userState.js","components/game/BoardGame.js","pages/OnboardingPage.js","App.js","reportWebVitals.js","assets/sound/background.mp3","recoil/atoms/toggleSoundState.js","hooks/usePlaySound.js","recoil/atoms/gameSoundState.js","components/sound/GameBgSound.js","components/SoundProvider.js","components/setting/ToggleMusic.js","components/setting/ToggleBgSound.js","components/setting/MenuBtn.js","components/setting/SettingContainer.js","index.js"],"names":["Routes","ONBOARDING_PAGE","PLAY_GAME_PAGE","baseUrl","API","HEALTH_CHECK","USER_VERIFY","USER_CREATE","USER_REMOVE","GAME_CREATE","GAME_QUIT","Number","props","className","onClick","status","isCurrent","value","toString","padStart","userState","atom","key","default","username","roomId","BoardGame","history","useHistory","useState","gameInfo","setGameInfo","useRecoilState","setUserState","sock","SockJS","stompClient","Stomp","over","useEffect","connect","frame","subscribe","message","data","JSON","parse","body","alert","push","send","metricNumber","map","item","i","metricStatus","number","currentNumber","style","justifyContent","color","player1Point","player2Point","player1","player2","fetch","then","response","json","unsubscribe","disconnect","console","log","catch","error","fontFamily","fontSize","el","document","createElement","setAttribute","position","left","appendChild","select","execCommand","removeChild","player2Ready","player1Ready","OnboardingPage","useCookies","cookies","setCookie","usernameInput","useRef","serverStatus","setServerStatus","usernameError","setUsernameError","userInfo","header","maxLength","autoFocus","ref","type","placeholder","marginTop","current","trim","path","focus","menu","replace","roomIdInput","prompt","App","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","toggleSoundState","music","Sound","gameSoundState","soundReady","playBgSound","undefined","pauseBgSound","GameBgSound","sound","defaultConfigSound","interrupt","volume","useRecoilValue","soundPath","backgroundSound","useSound","play","loadedSound","stop","pause","usePlaySound","setSounds","useSetRecoilState","loop","sounds","areLoaded","memo","SoundProvider","children","ToggleMusic","toggleSound","prevValue","icon","faVolumeUp","faVolumeMute","ToggleBgSound","isBgPlaying","setBgPlaying","faSpinner","MenuBtn","faHome","SettingContainer","toggleDisplay","setToggleDisplay","faAngleDoubleRight","faAngleDoubleLeft","ReactDOM","render","StrictMode","CookiesProvider","getElementById"],"mappings":"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","file":"static/js/main.0ed72f52.chunk.js","sourcesContent":["export const Routes = {\n  ONBOARDING_PAGE: \"/\",\n  PLAY_GAME_PAGE: \"/play/:roomId\",\n}\n\nconst baseUrl = \"https://lovereact2.herokuapp.com/api\";\nexport const API = {\n  HEALTH_CHECK: `${baseUrl}/health-check`,\n  USER_VERIFY: `${baseUrl}/user/verify`,\n  USER_CREATE: `${baseUrl}/user/create`,\n  USER_REMOVE: `${baseUrl}/user/remove`,\n  GAME_CREATE: `${baseUrl}/game/create`,\n  GAME_QUIT: `${baseUrl}/game/quit`,\n}\n\nexport const baseWs = \"https://lovereact2.herokuapp.com/ws\";","\r\nconst Number = (props) => {\r\n    const styleStt = {0: \"available\", 1: \"player1\", 2: \"player2\"};\r\n    return (\r\n        <div className=\"number\" onClick={props.onClick}>\r\n            <div className={styleStt[props.status]}>\r\n                <span className={props.isCurrent ? \"current\" : \"\"}>{props.value.toString().padStart(2, \"0\")}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Number;","import { atom } from \"recoil\";\r\n\r\nconst userState = atom({\r\n  key: \"USER_STATE\",\r\n  default: {\r\n    username: null,\r\n    roomId: null,\r\n  },\r\n});\r\n\r\nexport default userState;","import Number from \"./Number\";\r\nimport {baseWs, API, Routes} from \"../../routes/CONSTANTS\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport userState from \"../../recoil/atoms/userState\";\r\nimport SockJS from 'sockjs-client';\r\nimport Stomp from 'stompjs';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst BoardGame = () => {\r\n    const history = useHistory();\r\n    const [gameInfo, setGameInfo] = useState(null);\r\n    const [{username, roomId}, setUserState] = useRecoilState(userState);\r\n    var sock = new SockJS(baseWs);\r\n    let stompClient = Stomp.over(sock);\r\n\r\n    useEffect(()=> {\r\n        if (!username || !roomId) {\r\n            history.push(Routes.ONBOARDING_PAGE);\r\n        } else {\r\n            stompClient.connect({}, function (frame) {\r\n                stompClient.subscribe(`/topic/${roomId}`, function (message) {\r\n                    let data = JSON.parse(message.body);\r\n                    if (data.status === 0) {\r\n                        setGameInfo(data.gameInfo);\r\n                    } else {\r\n                        if (!gameInfo) {\r\n                            alert(data.message);\r\n                            history.push(Routes.ONBOARDING_PAGE);\r\n                        }\r\n                    }\r\n                });\r\n                stompClient.send(`/app/game/join/${roomId}/${username}`, {}, \"\")\r\n            })\r\n        }\r\n    }, [setGameInfo]);\r\n\r\n    const numberClickHandler = (number) => {\r\n        if (number === gameInfo.currentNumber + 1) {\r\n            stompClient.send(`/app/game/play/${gameInfo.roomId}/${username}/${number}`, {}, \"\")\r\n        }\r\n    }\r\n\r\n    const copyRoomIdHandler = () => {\r\n        const el = document.createElement('textarea');\r\n        el.value = roomId;\r\n        el.setAttribute('readonly', '');\r\n        el.style.position = 'absolute';\r\n        el.style.left = '-9999px';\r\n        document.body.appendChild(el);\r\n        el.select();\r\n        document.execCommand('copy');\r\n        document.body.removeChild(el);\r\n    }\r\n\r\n    const readyPlayHandler = () => {\r\n        stompClient.send(`/app/game/ready/${gameInfo.roomId}/${username}`, {}, \"\")\r\n    }\r\n\r\n    const backGameHandler = () => {\r\n        fetch(`${API.GAME_QUIT}?username=${username}`)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n              if(data.status === 0) {\r\n                setUserState({\r\n                    username: username,\r\n                    roomId: \"\",\r\n                })\r\n                  history.push(Routes.ONBOARDING_PAGE);\r\n                  stompClient.unsubscribe(`/topic/${roomId}`);\r\n                  stompClient.disconnect();\r\n              } else {\r\n                  console.log(data);\r\n              }\r\n        }\r\n        )\r\n        .catch(error => console.log(error));\r\n    }\r\n\r\n    return gameInfo ? \r\n    (\r\n            gameInfo.status=== 3 && gameInfo.metricNumber ? (\r\n                <div className=\"board-game\">\r\n                    {\r\n                        gameInfo.metricNumber.map((item, i) => <Number onClick={() => gameInfo.metricStatus[i] === 0 && numberClickHandler(item)} key={i} value={item} isCurrent={gameInfo.currentNumber === item} status={gameInfo.metricStatus[i]} />)\r\n                    }\r\n                </div>\r\n            ) : (\r\n                gameInfo.status=== 4 ? \r\n                (\r\n                    <div className=\"form-onboard\" style={{justifyContent: \"left\"}}>\r\n                        <h1 style={{color:\"brown\"}}>Cuộc chiến đã kết thúc với phần thắng thuộc về {gameInfo.player1Point > gameInfo.player2Point ? gameInfo.player1 : gameInfo.player2} </h1>\r\n                        <h1 style={{color:\"brown\"}}>Tổng điểm của bạn: {username === gameInfo.player1? gameInfo.player1Point : gameInfo.player2Point}</h1>\r\n                        <h1 style={{color:\"brown\"}}>Tổng điểm của đối thủ: {username === gameInfo.player1? gameInfo.player2Point : gameInfo.player1Point}</h1>\r\n                        <div className=\"btn-onboard\" onClick={backGameHandler}><span>Quay về</span></div>\r\n                    </div>\r\n            ) :\r\n                (<div className=\"form-onboard\" style={{justifyContent: \"left\"}}>\r\n                    <h1 style={{color:\"brown\"}}>Room ID: {gameInfo.roomId} </h1>\r\n                    <h1 style={{color:\"brown\"}}>Player 1: {gameInfo.player1}</h1>\r\n                    <h1 style={{color:\"brown\"}}>Player 2: {gameInfo.status === 0 ? <i style={{fontFamily:\"monospace\", fontSize:\"xx-large\", color:\"slateblue\"}}>[Waiting...]</i> : gameInfo.player2}</h1>\r\n                    {gameInfo.status === 0 && <div className=\"btn-onboard\" onClick={copyRoomIdHandler}><span>Copy Room ID</span></div>}\r\n                    {gameInfo.status === 2 && <b>{(gameInfo.player1 === username ? gameInfo.player2Ready : gameInfo.player1Ready) ? \"Đối thủ đã sẵn sàng, \" : \"\"}Trận chiến sắp bắt đầu!</b>}\r\n                    {gameInfo.status !== 0 && <div className=\"btn-onboard\" onClick={readyPlayHandler}><span>{(gameInfo.player1 === username ? gameInfo.player1Ready : gameInfo.player2Ready) ? \"Đợi xíu\" : \"Sẵn sàng\"}</span></div>}\r\n                </div>)\r\n        )\r\n    ) : (<div className=\"form-onboard\"><p>Loading...</p></div>);\r\n}\r\n\r\nexport default BoardGame;","import { useState, useEffect, useRef } from \"react\";\r\nimport {API, Routes} from \"../routes/CONSTANTS\";\r\nimport userState from \"../recoil/atoms/userState\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { useCookies } from 'react-cookie';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst OnboardingPage = () => {\r\n    const [cookies, setCookie] = useCookies(['user']);\r\n    const usernameInput = useRef(\"\");\r\n    const [serverStatus, setServerStatus] = useState(true);\r\n    const [usernameError, setUsernameError] = useState(\"\");\r\n    const [{username, roomId}, setUserState] = useRecoilState(userState);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        fetch(API.HEALTH_CHECK)\r\n          .then(response => response.json())\r\n          .then(data =>\r\n            setServerStatus(data.status === 0)\r\n          )\r\n          .catch(error => setServerStatus(false));\r\n\r\n          fetch(`${API.USER_VERIFY}?username=${cookies.username}`)\r\n          .then(response => response.json())\r\n          .then(data => {\r\n                if(data.status === 0 && data.userInfo) {\r\n                    setUserState({\r\n                        username: data.userInfo.username,\r\n                        roomId: data.userInfo.roomId,\r\n                    })\r\n                } else {\r\n                    setUserState({\r\n                        username: null,\r\n                        roomId: null,\r\n                    })\r\n                }\r\n          }\r\n          )\r\n          .catch(error => console.log(error));\r\n\r\n    }, [setUserState, cookies.username]);\r\n\r\n    const userNameSubmitHandler = () => {\r\n        if (usernameInput.current.value && usernameInput.current.value.trim()) {\r\n            fetch(`${API.USER_CREATE}?username=${usernameInput.current.value}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    if(data.status === 0 && data.userInfo) {\r\n                        setUserState({\r\n                            username: data.userInfo.username,\r\n                            roomId: data.userInfo.roomId,\r\n                        });\r\n                        setCookie(\"username\", data.userInfo.username, { path: '/' });\r\n                    } else {\r\n                        setUsernameError(data.message);\r\n                        usernameInput.current.focus();\r\n                    }\r\n                }\r\n                )\r\n                .catch(error => console.log(error));    \r\n        } else {\r\n            setUsernameError(\"Chưa nhập tên kìa, chắc kí đầu quá!\");\r\n            usernameInput.current.value = \"\";\r\n            usernameInput.current.focus();\r\n        }\r\n    };\r\n\r\n    const joinRoomHandler = () => {\r\n        var roomIdInput = prompt(\"Nhập mã phòng\", \"\");\r\n        if (roomIdInput) {\r\n            setUserState({\r\n                username: username,\r\n                roomId: roomIdInput,\r\n            });\r\n            history.push(Routes.PLAY_GAME_PAGE.replace(\":roomId\", roomIdInput));\r\n        }\r\n    }\r\n\r\n    const createRoomHandler = () => {\r\n        fetch(`${API.GAME_CREATE}?username=${username}`)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n              if(data.status === 0 && data.roomId) {\r\n                setUserState({\r\n                    username: username,\r\n                    roomId: data.roomId,\r\n                });\r\n                history.push(Routes.PLAY_GAME_PAGE.replace(\":roomId\", data.roomId));\r\n              } else if(data.status === 404) {\r\n                  setUserState({\r\n                      username: null,\r\n                      roomId: null,\r\n                  });\r\n              } else {\r\n                  alert(data.message);\r\n              }\r\n        }\r\n        )\r\n        .catch(error => console.log(error));\r\n    };\r\n\r\n    const removeUserHandler = () => {\r\n        fetch(`${API.USER_REMOVE}?username=${username}`)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n              if(data.status === 0) {\r\n                  setUserState({\r\n                      username: null,\r\n                      roomId: null,\r\n                  });\r\n                  setCookie(\"username\", null, { path: '/' });\r\n              } else {\r\n                  setUserState({\r\n                      username: null,\r\n                      roomId: null,\r\n                  })\r\n              }\r\n        }\r\n        )\r\n        .catch(error => console.log(error));\r\n    }\r\n\r\n    const header = username ? (<p className=\"title\">Vào chiến thôi nào {username}!</p>) : \r\n    (<>\r\n        <input maxLength=\"20\" autoFocus ref={usernameInput} className=\"user-name\" type=\"text\" placeholder=\"Nhập tên của bé vào đây!\" />\r\n        <span style={{marginTop: 5, color: \"blue\"}}>{usernameError}</span>\r\n        <div className=\"btn-onboard\" onClick={userNameSubmitHandler}><span>Go!</span></div>\r\n    </>\r\n    );\r\n\r\n    const menu = username ? (\r\n        <>\r\n        {/* should create a btn component */}\r\n        <div className=\"btn-onboard\"><span>Ghép nhanh</span></div>\r\n        <div className=\"btn-onboard\" onClick={createRoomHandler}><span>Tạo phòng</span></div>\r\n        <div className=\"btn-onboard\" onClick={joinRoomHandler}><span>Vào phòng</span></div>\r\n        <div className=\"btn-onboard\"><span>Hướng dẫn</span></div>\r\n        <div className=\"btn-onboard\" onClick={removeUserHandler}><span>Reset</span></div>\r\n        </>\r\n    ) : (\r\n        <>\r\n        <div className=\"btn-onboard\"><span>Hướng dẫn</span></div>\r\n        </>\r\n    );\r\n\r\n    return serverStatus ? (\r\n        <div className=\"form-onboard\">\r\n            {\r\n                username && roomId &&\r\n                    history.push(Routes.PLAY_GAME_PAGE.replace(\":roomId\", roomId))\r\n            }\r\n        \t{header}\r\n            {menu}\r\n        </div>\r\n    ) : (<div className=\"form-onboard\"><p>Xin lỗi, hệ thống đang trong thời gian bảo trì,<br />Vui lòng thử lại sau!</p></div>);\r\n}\r\n\r\nexport default OnboardingPage;","import './App.css';\nimport { Switch, Route } from \"react-router-dom\";\nimport { Routes } from \"./routes/CONSTANTS\";\nimport BoardGame from './components/game/BoardGame';\nimport OnboardingPage from './pages/OnboardingPage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n          <Route path={Routes.ONBOARDING_PAGE} exact>\n            <OnboardingPage />\n          </Route>\n          <Route path={`${Routes.PLAY_GAME_PAGE}`} exact>\n            <BoardGame />\n          </Route>\n          <Route path=\"*\">\n            <OnboardingPage />\n          </Route>\n        </Switch>\n      \n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/background.b0ffa427.mp3\";","import { atom } from \"recoil\";\n\nconst toggleSoundState = atom({\n  key: \"TOGGLE_SOUND\",\n  default: {\n    music: 1,\n    },\n});\n\nexport default toggleSoundState;\n","import useSound from \"use-sound\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport backgroundSound from \"../assets/sound/background.mp3\";\r\nimport toggleSoundState from \"../recoil/atoms/toggleSoundState\";\r\n\r\nexport const Sound = {\r\n  GAME_BACKGROUND: \"GAME_BACKGROUND\",\r\n}\r\n\r\nexport default function usePlaySound(sound) {\r\n  const { music } = useRecoilValue(toggleSoundState);\r\n  const defaultConfigSound = {\r\n    interrupt: true,\r\n    volume: music,\r\n  };\r\n  let soundPath = backgroundSound;\r\n  if (sound) {\r\n    switch (sound) {\r\n      case Sound.GAME_BACKGROUND:\r\n        soundPath = backgroundSound;\r\n        break;\r\n      default:\r\n        soundPath = backgroundSound;\r\n        break;\r\n    }\r\n  }\r\n\r\n  const [\r\n    play,\r\n    { sound: loadedSound, stop, pause },\r\n  ] = useSound(soundPath, defaultConfigSound);\r\n\r\n  return {\r\n    play,\r\n    loadedSound,\r\n    stop,\r\n    pause,\r\n  };\r\n}\r\n","import { atom } from \"recoil\";\n\nconst gameSoundState = atom({\n  key: \"GAME_SOUND_STATE\",\n  default: {\n    soundReady: false,\n    playBgSound: undefined,\n    pauseBgSound: undefined,\n  },\n});\n\nexport default gameSoundState;\n","import { memo, useEffect } from \"react\";\nimport { useSetRecoilState } from \"recoil\";\nimport usePlaySound, { Sound } from \"../../hooks/usePlaySound\";\nimport gameSoundState from \"../../recoil/atoms/gameSoundState\";\n\nconst GameBgSound = () => {\n  const {\n    play: playBgSound,\n    pause: pauseBgSound,\n    loadedSound,\n  } = usePlaySound(Sound.GAME_BACKGROUND);\n  const setSounds = useSetRecoilState(gameSoundState);\n\n  useEffect(() => {\n    if (loadedSound !== null) {\n      loadedSound.loop(true);\n      setSounds((sounds) => ({\n        ...sounds,\n        soundReady: true,\n        playBgSound,\n        pauseBgSound,\n      }));\n    }\n  }, [loadedSound, playBgSound, pauseBgSound, setSounds]);\n\n  return null;\n};\n\nfunction areLoaded() {\n  return true;\n}\n\nexport default memo(GameBgSound, areLoaded);\n","import GameBgSound from \"./sound/GameBgSound\";\n\nconst SoundProvider = ({ children }) => {\n  return (\n    <>\n      <GameBgSound />\n      {children}\n    </>\n  );\n};\n\nexport default SoundProvider;\n","import { useRecoilState } from \"recoil\";\r\nimport toggleSoundState from \"../../recoil/atoms/toggleSoundState\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faVolumeMute, faVolumeUp } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst ToggleMusic = () => {\r\n  const [{music}, toggleSound] = useRecoilState(toggleSoundState);\r\n  return (\r\n    <div\r\n        className=\"btn\"\r\n        onClick={() => {\r\n        toggleSound((prevValue) => ({\r\n          ...prevValue,\r\n          music: prevValue.music === 1 ? 0 : 1,\r\n        }));\r\n      }}\r\n    >\r\n        <FontAwesomeIcon className=\"icon\" icon={music ? faVolumeUp : faVolumeMute} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToggleMusic;\r\n","import { useState, useEffect } from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport gameSoundState from \"../../recoil/atoms/gameSoundState\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\n\nconst ToggleBgSound = () => {\n  const [isBgPlaying, setBgPlaying] = useState(false);\n  const [{soundReady, pauseBgSound, playBgSound}] = useRecoilState(gameSoundState);\n  useEffect(() => {\n    if(soundReady) {\n      playBgSound();\n      setBgPlaying(true);\n    }\n  }, [soundReady, playBgSound]);\n\n  return soundReady ? (\n    <div\n    className={`btn ${isBgPlaying ? 'pause' : 'play'}`}\n      onClick={() => {\n        if (isBgPlaying) {\n          pauseBgSound();\n          setBgPlaying(false);\n        } else {\n          playBgSound();\n          setBgPlaying(true);\n        }\n      }}\n    >\n      <span className=\"bar bar-1\"></span>\n\t\t  <span className=\"bar bar-2\"></span>\t\n    </div>\n  ) : <div className=\"btn\"><FontAwesomeIcon className=\"icon\" icon={faSpinner} /></div>;\n};\n\nexport default ToggleBgSound;\n","import { useRecoilState } from \"recoil\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHome } from '@fortawesome/free-solid-svg-icons';\r\nimport { useHistory } from 'react-router-dom'\r\nimport { API, Routes} from \"../../routes/CONSTANTS\";\r\nimport userState from \"../../recoil/atoms/userState\";\r\n\r\nconst MenuBtn = () => {\r\n  const history = useHistory();\r\n  const [{username}, setUserState] = useRecoilState(userState);\r\n\r\n  const backGameHandler = () => {\r\n    fetch(`${API.GAME_QUIT}?username=${username}`)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n          if(data.status === 0) {\r\n            setUserState({\r\n                username: username,\r\n                roomId: \"\",\r\n            })\r\n              history.push(Routes.ONBOARDING_PAGE);\r\n          } else {\r\n              console.log(data);\r\n          }\r\n    }\r\n    )\r\n    .catch(error => console.log(error));\r\n}\r\n\r\n  return (\r\n    <div\r\n        className=\"btn\"\r\n        onClick={backGameHandler}\r\n    >\r\n        <FontAwesomeIcon className=\"icon\" icon={faHome} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MenuBtn;\r\n","import ToggleMusic from \"./ToggleMusic\";\r\nimport ToggleBgSound from \"./ToggleBgSound\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAngleDoubleRight, faAngleDoubleLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport { useState, useEffect } from \"react\";\r\nimport MenuBtn from \"./MenuBtn\";\r\n\r\nconst SettingContainer = () => {\r\n    const [toggleDisplay, setToggleDisplay] = useState(false);\r\n\r\n    const angleDoubleRightClickHandler = () => {\r\n        setToggleDisplay(!toggleDisplay);\r\n    }\r\n    \r\n    useEffect(() => {\r\n\r\n    }, [toggleDisplay]);\r\n\r\n    return (\r\n        <div className={`setting-container ${toggleDisplay ? \"show\" : \"hidden\"}`}>\r\n            <div className=\"icon-fixed\" onClick={angleDoubleRightClickHandler}>\r\n            <FontAwesomeIcon icon={toggleDisplay ? faAngleDoubleRight : faAngleDoubleLeft} />\r\n            </div>\r\n            <ToggleMusic />\r\n            <ToggleBgSound />\r\n            <MenuBtn />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default SettingContainer;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport { RecoilRoot } from \"recoil\";\nimport SoundProvider from \"./components/SoundProvider\";\nimport SettingContainer from './components/setting/SettingContainer';\nimport { CookiesProvider } from \"react-cookie\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <CookiesProvider>\n        <SoundProvider>\n          <Router>\n            <SettingContainer />\n            <App />\n          </Router>\n        </SoundProvider>\n      </CookiesProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}